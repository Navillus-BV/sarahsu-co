---
import clsx from 'clsx'
import Hummingbird from './Hummingbird.astro'
import { mdToHtml } from '../utils/markdown'

interface Props {
  data: CMS.ImageBlock
}

const { data } = Astro.props as Props
const {
  theme = 'white',
  title,
  subtitle,
  subtitleIcon,
  image,
  content,
  ctas = [],
  flipped
} = data

const contentHtml = mdToHtml(content)
---

<section class={clsx({ 'full-bleed': true, flipped, primary: theme === 'primary' })}>
  <div class='container'>
    <div class='wrapper'>
      <img alt={image.alt} src={Astro.resolve(image.src)} />

      <main>
        {(title || subtitle) && (
          <h2 class={clsx({ h5: subtitle })}>
            {subtitle || title}
            {subtitle && subtitleIcon && (
              <Hummingbird width='3rem' height='3rem' opacity={0.5} theme='secondary' />
            )}
          </h2>
        )}

        {(title && subtitle && (
          <h3 class='h2'>{title}</h3>
        ))}

        {contentHtml}
        <slot />

        {ctas.length > 0 && (
          <footer class={clsx({ multi: ctas.length > 1 })}>
            {ctas.map(({ text, url }) => (
              <a class="button alt" href={url}>{text}</a>
            ))}
          </footer>
        )}
      </main>
    </div>
  </div>
</section>

<style lang='scss'>
  section.primary {
    background: var(--primary-gradient);
    color: var(--chisel-neutral-50);
  }

  .wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
  }

  img {
    grid-column: 1;
    grid-row: 1 / 3;
    width: 67vw;
    max-width: 400px;
    justify-self: center;
    filter: var(--drop-shadow-lg);
    aspect-ratio: 1;
    border-radius: 999px;
  }

  main {
    grid-column: 1;
    grid-row: 3;
    padding: var(--spacer-md) var(--spacer-sm);
    max-width: var(--width-prose);
    margin: 0 auto;

    & :global(ul) {
      list-style: none;
      margin: var(--spacer-md) 0 0;
      text-align: start;
    }

    & :global(li) {
      position: relative;
      margin-left: 3ch;

      &:not(:last-child) {
        margin-bottom: var(--spacer-sm);
      }

      &:before {
        content: 'X';
        position: absolute;
        left: -1.5ch;
        top: 50%;
        transform: translate(0, -50%);
        font-size: var(--chisel-h3);
        font-family: var(--font-family-display);
      }
    }
  }

  .h5 {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    font-weight: 400;
    font-family: var(--font-family-base);
    text-transform: uppercase;
  }

  .h5 :global(svg) {
    margin-left: var(--spacer-sm);
    margin-right: calc(-3rem - var(--spacer-sm));
  }

  h3 {
    margin: var(--spacer-sm) 0 var(--spacer-md);
  }

  footer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 25rem;
    margin: var(--spacer-md) auto 0;

    & :not(:last-child) {
      margin-bottom: var(--spacer-sm);
    }
  }

  footer:not(.multi) {
    align-items: center;
  }

  @media screen and (min-width: 979px) {
    section {
      grid-template-rows: 1fr;
      grid-template-columns: auto auto 1fr;

      &.flipped {
        grid-template-columns: 1fr auto auto;
      }
    }

    .h5 {
      justify-content: start;
    }

    .bg {
      grid-column: 2 / -1;
      grid-row: 1;
    }

    img {
      grid-column: 1 / 3;
      grid-row: 1;
    }

    main {
      grid-row: 1;
      grid-column: 3 / -1;
      margin: var(--spacer-md);
    }

    footer {
      flex-direction: row;
      max-width: unset;
      margin: var(--spacer-md) 0 0;
      justify-content: start;

      & a {
        &:not(:last-child) {
          margin-bottom: 0;
          margin-right: var(--spacer-md);
        }
      }
    }

    footer:not(.multi) > * {
      align-self: start;
    }

    .flipped .bg {
      grid-column: 1 / 3;
    }

    .flipped img {
      grid-column: 2 / -1;
    }

    .flipped main {
      grid-column: 1 / 2;
    }
  }
</style>