---
import clsx from 'clsx'
import Hummingbird from './Hummingbird.astro'

interface Props {
  title: string
  subtitle: string | undefined
  subtitleIcon: boolean
  image: {
    alt: string
    src: string
  }
  cta: {
    title: string
    href: string
  }
  flipped: boolean
  muted: boolean
}

const { title, subtitle, subtitleIcon, image, cta, flipped, muted } = Astro.props as Props
---

<section class={clsx({ muted, flipped })}>
  <div class='bg'></div>
  <img alt={image.alt} src={image.src} />

  <main>
    {(title || subtitle) && (
      <h2 class={subtitle ? 'h5' : 'h3'}>
        {subtitle || title}
        {subtitle && subtitleIcon && (
          <Hummingbird width='3rem' height='3rem' theme='secondary' />
        )}
      </h2>
    )}

    {(title && subtitle && (
      <h3>{title}</h3>
    ))}

    <slot />

    {cta && (
      <footer>
        <a class="button" href={cta.url}>{cta.title}</a>
      </footer>
    )}
  </main>
</section>

<style lang='scss'>
  section {
    display: grid;
    grid-template-rows: 1fr 1fr auto;
    align-items: center;
  }

  img {
    grid-column: 1;
    grid-row: 1 / 3;
    width: 67vw;
    max-width: 400px;
    justify-self: center;
    filter: var(--drop-shadow-lg);
    aspect-ratio: 1;
    border-radius: 999px;
  }

  .bg {
    grid-column: 1;
    grid-row: 2 / 4;
    background: var(--chisel-primary-light);
    width: 100%;
    height: 100%;
  }

  section.muted .bg {
    background: var(--chisel-neutral-200);
  }

  main {
    grid-column: 1;
    grid-row: 3;
    padding: var(--spacer-md) var(--spacer-sm);
    max-width: var(--width-prose);
    margin: 0 auto;

    & :global(ul) {
      list-style: none;
      margin: var(--spacer-md) 0 0;
      text-align: start;
    }

    & :global(li) {
      position: relative;
      margin-left: 3ch;

      &:not(:last-child) {
        margin-bottom: var(--spacer-sm);
      }

      &:before {
        content: 'X';
        position: absolute;
        left: -1.5ch;
        top: 50%;
        transform: translate(0, -50%);
        font-size: var(--chisel-h3);
        font-family: var(--font-family-display);
      }
    }
  }

  .h5 {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    font-weight: 400;
    font-family: var(--font-family-base);
    text-transform: uppercase;
  }

  .h5 :global(svg) {
    margin-left: var(--spacer-sm);
    margin-right: calc(-3rem - var(--spacer-sm));
  }

  h3 {
    margin: var(--spacer-sm) 0 var(--spacer-md);
  }

  footer {
    display: flex;
    justify-content: center;
    margin-top: var(--spacer-sm);
  }

  @media screen and (min-width: 979px) {
    section {
      grid-template-rows: 1fr;
      grid-template-columns: auto auto 1fr;

      &.flipped {
        grid-template-columns: 1fr auto auto;
      }
    }

    .bg {
      grid-column: 2 / -1;
      grid-row: 1;
    }

    img {
      grid-column: 1 / 3;
      grid-row: 1;
    }

    main {
      grid-row: 1;
      grid-column: 3 / -1;
      margin: var(--spacer-md);
    }

    .flipped .bg {
      grid-column: 1 / 3;
    }

    .flipped img {
      grid-column: 2 / -1;
    }

    .flipped main {
      grid-column: 1 / 2;
    }
  }
</style>