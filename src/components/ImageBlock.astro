---
import clsx from 'clsx'
import BlockTitle from './BlockTitle.astro'
import Hummingbird from './Hummingbird.astro'
import { mdToHtml } from '../utils/markdown'

interface Props {
  data: CMS.ImageBlock
}

const { data } = Astro.props as Props
const {
  theme = 'white',
  title,
  subtitle,
  subtitleIcon,
  image,
  content,
  ctas = [],
  flipped
} = data

const contentHtml = mdToHtml(content)

const primary = theme === 'primary'
---

<section class={clsx({ 'full-bleed': true, flipped, primary })}>
  <div class='container'>
    <article>
      <header>
        <BlockTitle title={title} subtitle={subtitle} alt={primary} subtitleIcon={subtitleIcon} class='title' />
      </header>

      <img alt={image.alt} src={Astro.resolve(image.src)} />

      <main>
        {contentHtml}
      </main>

      {ctas.length > 0 && (
        <footer class={clsx({ multi: ctas.length > 1 })}>
          {ctas.map(({ text, url }) => (
            <a class="button alt" href={url}>{text}</a>
          ))}
        </footer>
      )}
    </article>
  </div>
</section>

<style lang='scss'>
  section.primary {
    background: var(--primary-gradient);
    color: var(--chisel-neutral-50);
    padding: var(--container-row-gap) 0;
  }

  article {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: 'title' 'image' 'content' 'footer';
    align-items: center;
    text-align: center;
    margin: 0 auto;

    & :global(ul) {
      list-style: none;
      margin: var(--spacer-md) 0 0;
      text-align: start;
    }

    & :global(li) {
      position: relative;
      margin-left: 3ch;

      &:not(:last-child) {
        margin-bottom: var(--spacer-sm);
      }

      &:before {
        content: 'X';
        position: absolute;
        left: -1.5ch;
        top: 50%;
        transform: translate(0, -50%);
        font-size: var(--chisel-h3);
        font-family: var(--font-family-display);
      }
    }
  }
  
  header {
    grid-area: title;
  }

  img {
    grid-area: image;
    width: 67vw;
    max-width: 400px;
    justify-self: center;
    filter: var(--drop-shadow-lg);
    aspect-ratio: 1;
    border-radius: 999px;
  }

  main {
    padding-top: var(--spacer-md);
    grid-area: content;
  }

  footer {
    grid-area: footer;
    display: flex;
    flex-direction: column;
    justify-content: center;
    max-width: 25rem;
    margin: var(--spacer-md) auto 0;

    & :not(:last-child) {
      margin-bottom: var(--spacer-sm);
    }
  }

  footer:not(.multi) {
    align-items: center;
  }

  @media screen and (min-width: 979px) {
    article {
      grid-template-columns: 1fr 2fr;
      grid-template-areas: 'image title' 'image content' 'image footer';
      column-gap: var(--spacer-lg);
      text-align: start;
    }

    article :global(.title) {
      text-align: start;
      justify-content: start;
    }

    img {
      width: 100%;
      max-width: initial;
    }

    footer {
      flex-direction: row;
      max-width: unset;
      margin: var(--spacer-md) 0 0;
      justify-content: start;

      & a {
        &:not(:last-child) {
          margin-bottom: 0;
          margin-right: var(--spacer-md);
        }
      }
    }

    footer:not(.multi) > * {
      align-self: start;
    }

    /** TODO: flipped */
  }
</style>