---
import Hummingbird from './Hummingbird.astro'
import menu from '../data/menu.json'
import site from '../data/site.json'
import { getPages } from '../utils/pages'

interface Props {
  pathname: string
}

const allPages = Astro.fetchContent('../data/pages/*.md')

const pages = getPages(allPages, menu.pages)
  .map(({ title, href }) => ({ title, href }))
---

<header>
  <a href='/' class='h5 nohover' rel='home'>
    <Hummingbird width='4em' height='4em' opacity={0.4} theme="secondary" />
    {site.title}
  </a>

  <input type="checkbox" id="menubtn" class="sr-only" />
  <label role="button" for="menubtn" class="button">
    <span></span>
  </label>

  <nav>
    <ul>
      {pages.map(({ title, href }) => (
        <li>
          <a class='alt' href={href}>{title}</a>
        </li>
      ))}

      {menu.cta && (
        <a class="button secondary" href={menu.cta.url}>{menu.cta.text}</a>
      )}
    </ul>
  </nav>
</header>

<style lang='scss'>
  header {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: 'brand . menu' 'nav nav nav';
    align-items: center;
    justify-content: space-between;
    padding: var(--spacer-sm) 0;
    color: var(--chisel-neutral-50);
  }

  a {
    text-decoration: none;
  }

  [rel=home] {
    grid-area: brand;
    position: relative;
  }

  [rel=home] :global(svg) {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -55%) scaleX(-1);
  }

  label[for=menubtn] {
    grid-area: menu;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height: var(--spacer-md);
    width: var(--spacer-md);
    border-radius: 999px;
    padding: 0;
    margin: 0;
    background: transparent;
    border: 2px solid var(--chisel-neutral-50);
    box-shadow: var(--shadow);

    & span {
      width: 50%;
      height: 1px;
      background: var(--chisel-neutral-50);
    }

    & span:before, & span:after {
      content: '';
      display: block;
      width: 100%;
      height: 1px;
      background: var(--chisel-neutral-50);
    }

    & span:before {
      transform: translateY(-.33em);
    }

    & span:after {
      transform: translateY(calc(.33em - 1px));
    }
  }

  nav {
    display: none;
    grid-area: nav;

    & ul {
      list-style: none;
      text-align: center;
      margin: 0;
    }
    
    & a:not(.button) {
      display: block;
      padding: var(--spacer-tiny) 0;
      text-transform: uppercase;
    }

    & a.button {
      font-size: inherit;
    }
  }

  #menubtn:checked ~ nav {
    display: block;
  }

  @media screen and (min-width: 979px) {
    #menubtn, label[for=menubtn] {
      display: none;
    }

    header {
      grid-template-areas: 'brand . nav';
    }

    [rel=home] {
      font-size: var(--chisel-h4);
    }

    nav {
      display: block;

      & ul {
        display: flex;
        padding: 0;
      }

      & a:not(.button) {
        padding: var(--spacer-sm) var(--spacer-md);

        &:last-child {
          padding-right: 0;
        }
      }

      a.button {
        margin-left: var(--spacer-md);
      }
    }
  }
</style>